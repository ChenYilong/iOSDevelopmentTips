// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class AckCommand;
@class AckCommandBuilder;
@class ConvCommand;
@class ConvCommandBuilder;
@class DataCommand;
@class DataCommandBuilder;
@class DirectCommand;
@class DirectCommandBuilder;
@class ErrorCommand;
@class ErrorCommandBuilder;
@class GenericCommand;
@class GenericCommandBuilder;
@class JsonObjectMessage;
@class JsonObjectMessageBuilder;
@class LogItem;
@class LogItemBuilder;
@class LoginCommand;
@class LoginCommandBuilder;
@class LogsCommand;
@class LogsCommandBuilder;
@class RcpCommand;
@class RcpCommandBuilder;
@class ReadCommand;
@class ReadCommandBuilder;
@class RoomCommand;
@class RoomCommandBuilder;
@class SessionCommand;
@class SessionCommandBuilder;
@class UnreadCommand;
@class UnreadCommandBuilder;
@class UnreadTuple;
@class UnreadTupleBuilder;


typedef NS_ENUM(SInt32, CommandType) {
  CommandTypeSession = 0,
  CommandTypeConv = 1,
  CommandTypeDirect = 2,
  CommandTypeAck = 3,
  CommandTypeRcp = 4,
  CommandTypeUnread = 5,
  CommandTypeLogs = 6,
  CommandTypeError = 7,
  CommandTypeLogin = 8,
  CommandTypeData = 9,
  CommandTypeRoom = 10,
  CommandTypeRead = 11,
};

BOOL CommandTypeIsValidValue(CommandType value);
NSString *NSStringFromCommandType(CommandType value);

typedef NS_ENUM(SInt32, OpType) {
  OpTypeOpen = 1,
  OpTypeAdd = 2,
  OpTypeRemove = 3,
  OpTypeClose = 4,
  OpTypeOpened = 5,
  OpTypeClosed = 6,
  OpTypeQuery = 7,
  OpTypeQueryResult = 8,
  OpTypeConflict = 9,
  OpTypeAdded = 10,
  OpTypeRemoved = 11,
  OpTypeStart = 30,
  OpTypeStarted = 31,
  OpTypeJoined = 32,
  OpTypeMembersJoined = 33,
  OpTypeLeft = 39,
  OpTypeMembersLeft = 40,
  OpTypeResults = 42,
  OpTypeCount = 43,
  OpTypeResult = 44,
  OpTypeUpdate = 45,
  OpTypeUpdated = 46,
  OpTypeMute = 47,
  OpTypeUnmute = 48,
  OpTypeJoin = 80,
  OpTypeInvite = 81,
  OpTypeLeave = 82,
  OpTypeKick = 83,
  OpTypeReject = 84,
  OpTypeInvited = 85,
  OpTypeKicked = 86,
};

BOOL OpTypeIsValidValue(OpType value);
NSString *NSStringFromOpType(OpType value);


@interface MessagesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define JsonObjectMessage_data @"data"
@interface JsonObjectMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasData_:1;
  NSString* data;
}
- (BOOL) hasData;
@property (readonly, strong) NSString* data;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (JsonObjectMessageBuilder*) builder;
+ (JsonObjectMessageBuilder*) builder;
+ (JsonObjectMessageBuilder*) builderWithPrototype:(JsonObjectMessage*) prototype;
- (JsonObjectMessageBuilder*) toBuilder;

+ (JsonObjectMessage*) parseFromData:(NSData*) data;
+ (JsonObjectMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JsonObjectMessage*) parseFromInputStream:(NSInputStream*) input;
+ (JsonObjectMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (JsonObjectMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (JsonObjectMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface JsonObjectMessageBuilder : PBGeneratedMessageBuilder {
@private
  JsonObjectMessage* resultJsonObjectMessage;
}

- (JsonObjectMessage*) defaultInstance;

- (JsonObjectMessageBuilder*) clear;
- (JsonObjectMessageBuilder*) clone;

- (JsonObjectMessage*) build;
- (JsonObjectMessage*) buildPartial;

- (JsonObjectMessageBuilder*) mergeFrom:(JsonObjectMessage*) other;
- (JsonObjectMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (JsonObjectMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (NSString*) data;
- (JsonObjectMessageBuilder*) setData:(NSString*) value;
- (JsonObjectMessageBuilder*) clearData;
@end

#define UnreadTuple_cid @"cid"
#define UnreadTuple_unread @"unread"
@interface UnreadTuple : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUnread_:1;
  BOOL hasCid_:1;
  SInt32 unread;
  NSString* cid;
}
- (BOOL) hasCid;
- (BOOL) hasUnread;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt32 unread;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnreadTupleBuilder*) builder;
+ (UnreadTupleBuilder*) builder;
+ (UnreadTupleBuilder*) builderWithPrototype:(UnreadTuple*) prototype;
- (UnreadTupleBuilder*) toBuilder;

+ (UnreadTuple*) parseFromData:(NSData*) data;
+ (UnreadTuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadTuple*) parseFromInputStream:(NSInputStream*) input;
+ (UnreadTuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnreadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnreadTupleBuilder : PBGeneratedMessageBuilder {
@private
  UnreadTuple* resultUnreadTuple;
}

- (UnreadTuple*) defaultInstance;

- (UnreadTupleBuilder*) clear;
- (UnreadTupleBuilder*) clone;

- (UnreadTuple*) build;
- (UnreadTuple*) buildPartial;

- (UnreadTupleBuilder*) mergeFrom:(UnreadTuple*) other;
- (UnreadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnreadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (UnreadTupleBuilder*) setCid:(NSString*) value;
- (UnreadTupleBuilder*) clearCid;

- (BOOL) hasUnread;
- (SInt32) unread;
- (UnreadTupleBuilder*) setUnread:(SInt32) value;
- (UnreadTupleBuilder*) clearUnread;
@end

#define LogItem_from @"from"
#define LogItem_data @"data"
#define LogItem_timestamp @"timestamp"
#define LogItem_msgId @"msgId"
@interface LogItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasFrom_:1;
  BOOL hasData_:1;
  BOOL hasMsgId_:1;
  SInt64 timestamp;
  NSString* from;
  NSString* data;
  NSString* msgId;
}
- (BOOL) hasFrom;
- (BOOL) hasData;
- (BOOL) hasTimestamp;
- (BOOL) hasMsgId;
@property (readonly, strong) NSString* from;
@property (readonly, strong) NSString* data;
@property (readonly) SInt64 timestamp;
@property (readonly, strong) NSString* msgId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LogItemBuilder*) builder;
+ (LogItemBuilder*) builder;
+ (LogItemBuilder*) builderWithPrototype:(LogItem*) prototype;
- (LogItemBuilder*) toBuilder;

+ (LogItem*) parseFromData:(NSData*) data;
+ (LogItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LogItem*) parseFromInputStream:(NSInputStream*) input;
+ (LogItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LogItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LogItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LogItemBuilder : PBGeneratedMessageBuilder {
@private
  LogItem* resultLogItem;
}

- (LogItem*) defaultInstance;

- (LogItemBuilder*) clear;
- (LogItemBuilder*) clone;

- (LogItem*) build;
- (LogItem*) buildPartial;

- (LogItemBuilder*) mergeFrom:(LogItem*) other;
- (LogItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LogItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFrom;
- (NSString*) from;
- (LogItemBuilder*) setFrom:(NSString*) value;
- (LogItemBuilder*) clearFrom;

- (BOOL) hasData;
- (NSString*) data;
- (LogItemBuilder*) setData:(NSString*) value;
- (LogItemBuilder*) clearData;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (LogItemBuilder*) setTimestamp:(SInt64) value;
- (LogItemBuilder*) clearTimestamp;

- (BOOL) hasMsgId;
- (NSString*) msgId;
- (LogItemBuilder*) setMsgId:(NSString*) value;
- (LogItemBuilder*) clearMsgId;
@end

@interface LoginCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LoginCommandBuilder*) builder;
+ (LoginCommandBuilder*) builder;
+ (LoginCommandBuilder*) builderWithPrototype:(LoginCommand*) prototype;
- (LoginCommandBuilder*) toBuilder;

+ (LoginCommand*) parseFromData:(NSData*) data;
+ (LoginCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginCommand*) parseFromInputStream:(NSInputStream*) input;
+ (LoginCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LoginCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LoginCommandBuilder : PBGeneratedMessageBuilder {
@private
  LoginCommand* resultLoginCommand;
}

- (LoginCommand*) defaultInstance;

- (LoginCommandBuilder*) clear;
- (LoginCommandBuilder*) clone;

- (LoginCommand*) build;
- (LoginCommand*) buildPartial;

- (LoginCommandBuilder*) mergeFrom:(LoginCommand*) other;
- (LoginCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LoginCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define DataCommand_ids @"ids"
#define DataCommand_msg @"msg"
@interface DataCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * idsArray;
  NSMutableArray * msgArray;
}
@property (readonly, strong) NSArray * ids;
@property (readonly, strong) NSArray * msg;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (NSString*)msgAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DataCommandBuilder*) builder;
+ (DataCommandBuilder*) builder;
+ (DataCommandBuilder*) builderWithPrototype:(DataCommand*) prototype;
- (DataCommandBuilder*) toBuilder;

+ (DataCommand*) parseFromData:(NSData*) data;
+ (DataCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataCommand*) parseFromInputStream:(NSInputStream*) input;
+ (DataCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DataCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DataCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DataCommandBuilder : PBGeneratedMessageBuilder {
@private
  DataCommand* resultDataCommand;
}

- (DataCommand*) defaultInstance;

- (DataCommandBuilder*) clear;
- (DataCommandBuilder*) clone;

- (DataCommand*) build;
- (DataCommand*) buildPartial;

- (DataCommandBuilder*) mergeFrom:(DataCommand*) other;
- (DataCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DataCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)ids;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (DataCommandBuilder *)addIds:(NSString*)value;
- (DataCommandBuilder *)setIdsArray:(NSArray *)array;
- (DataCommandBuilder *)clearIds;

- (NSMutableArray *)msg;
- (NSString*)msgAtIndex:(NSUInteger)index;
- (DataCommandBuilder *)addMsg:(NSString*)value;
- (DataCommandBuilder *)setMsgArray:(NSArray *)array;
- (DataCommandBuilder *)clearMsg;
@end

#define SessionCommand_t @"t"
#define SessionCommand_n @"n"
#define SessionCommand_s @"s"
#define SessionCommand_ua @"ua"
#define SessionCommand_r @"r"
#define SessionCommand_tag @"tag"
#define SessionCommand_deviceId @"deviceId"
#define SessionCommand_sessionPeerIds @"sessionPeerIds"
#define SessionCommand_onlineSessionPeerIds @"onlineSessionPeerIds"
#define SessionCommand_st @"st"
#define SessionCommand_stTtl @"stTtl"
#define SessionCommand_code @"code"
#define SessionCommand_reason @"reason"
@interface SessionCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasR_:1;
  BOOL hasT_:1;
  BOOL hasCode_:1;
  BOOL hasN_:1;
  BOOL hasS_:1;
  BOOL hasUa_:1;
  BOOL hasTag_:1;
  BOOL hasDeviceId_:1;
  BOOL hasSt_:1;
  BOOL hasStTtl_:1;
  BOOL hasReason_:1;
  BOOL r_:1;
  SInt64 t;
  SInt32 code;
  NSString* n;
  NSString* s;
  NSString* ua;
  NSString* tag;
  NSString* deviceId;
  NSString* st;
  NSString* stTtl;
  NSString* reason;
  NSMutableArray * sessionPeerIdsArray;
  NSMutableArray * onlineSessionPeerIdsArray;
}
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasS;
- (BOOL) hasUa;
- (BOOL) hasR;
- (BOOL) hasTag;
- (BOOL) hasDeviceId;
- (BOOL) hasSt;
- (BOOL) hasStTtl;
- (BOOL) hasCode;
- (BOOL) hasReason;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
@property (readonly, strong) NSString* s;
@property (readonly, strong) NSString* ua;
- (BOOL) r;
@property (readonly, strong) NSString* tag;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSArray * sessionPeerIds;
@property (readonly, strong) NSArray * onlineSessionPeerIds;
@property (readonly, strong) NSString* st;
@property (readonly, strong) NSString* stTtl;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;
- (NSString*)onlineSessionPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SessionCommandBuilder*) builder;
+ (SessionCommandBuilder*) builder;
+ (SessionCommandBuilder*) builderWithPrototype:(SessionCommand*) prototype;
- (SessionCommandBuilder*) toBuilder;

+ (SessionCommand*) parseFromData:(NSData*) data;
+ (SessionCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionCommand*) parseFromInputStream:(NSInputStream*) input;
+ (SessionCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SessionCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SessionCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SessionCommandBuilder : PBGeneratedMessageBuilder {
@private
  SessionCommand* resultSessionCommand;
}

- (SessionCommand*) defaultInstance;

- (SessionCommandBuilder*) clear;
- (SessionCommandBuilder*) clone;

- (SessionCommand*) build;
- (SessionCommand*) buildPartial;

- (SessionCommandBuilder*) mergeFrom:(SessionCommand*) other;
- (SessionCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SessionCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasT;
- (SInt64) t;
- (SessionCommandBuilder*) setT:(SInt64) value;
- (SessionCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (SessionCommandBuilder*) setN:(NSString*) value;
- (SessionCommandBuilder*) clearN;

- (BOOL) hasS;
- (NSString*) s;
- (SessionCommandBuilder*) setS:(NSString*) value;
- (SessionCommandBuilder*) clearS;

- (BOOL) hasUa;
- (NSString*) ua;
- (SessionCommandBuilder*) setUa:(NSString*) value;
- (SessionCommandBuilder*) clearUa;

- (BOOL) hasR;
- (BOOL) r;
- (SessionCommandBuilder*) setR:(BOOL) value;
- (SessionCommandBuilder*) clearR;

- (BOOL) hasTag;
- (NSString*) tag;
- (SessionCommandBuilder*) setTag:(NSString*) value;
- (SessionCommandBuilder*) clearTag;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (SessionCommandBuilder*) setDeviceId:(NSString*) value;
- (SessionCommandBuilder*) clearDeviceId;

- (NSMutableArray *)sessionPeerIds;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;
- (SessionCommandBuilder *)addSessionPeerIds:(NSString*)value;
- (SessionCommandBuilder *)setSessionPeerIdsArray:(NSArray *)array;
- (SessionCommandBuilder *)clearSessionPeerIds;

- (NSMutableArray *)onlineSessionPeerIds;
- (NSString*)onlineSessionPeerIdsAtIndex:(NSUInteger)index;
- (SessionCommandBuilder *)addOnlineSessionPeerIds:(NSString*)value;
- (SessionCommandBuilder *)setOnlineSessionPeerIdsArray:(NSArray *)array;
- (SessionCommandBuilder *)clearOnlineSessionPeerIds;

- (BOOL) hasSt;
- (NSString*) st;
- (SessionCommandBuilder*) setSt:(NSString*) value;
- (SessionCommandBuilder*) clearSt;

- (BOOL) hasStTtl;
- (NSString*) stTtl;
- (SessionCommandBuilder*) setStTtl:(NSString*) value;
- (SessionCommandBuilder*) clearStTtl;

- (BOOL) hasCode;
- (SInt32) code;
- (SessionCommandBuilder*) setCode:(SInt32) value;
- (SessionCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (SessionCommandBuilder*) setReason:(NSString*) value;
- (SessionCommandBuilder*) clearReason;
@end

#define ErrorCommand_code @"code"
#define ErrorCommand_reason @"reason"
#define ErrorCommand_appCode @"appCode"
@interface ErrorCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCode_:1;
  BOOL hasAppCode_:1;
  BOOL hasReason_:1;
  SInt32 code;
  SInt32 appCode;
  NSString* reason;
}
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasAppCode;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
@property (readonly) SInt32 appCode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ErrorCommandBuilder*) builder;
+ (ErrorCommandBuilder*) builder;
+ (ErrorCommandBuilder*) builderWithPrototype:(ErrorCommand*) prototype;
- (ErrorCommandBuilder*) toBuilder;

+ (ErrorCommand*) parseFromData:(NSData*) data;
+ (ErrorCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorCommand*) parseFromInputStream:(NSInputStream*) input;
+ (ErrorCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ErrorCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ErrorCommandBuilder : PBGeneratedMessageBuilder {
@private
  ErrorCommand* resultErrorCommand;
}

- (ErrorCommand*) defaultInstance;

- (ErrorCommandBuilder*) clear;
- (ErrorCommandBuilder*) clone;

- (ErrorCommand*) build;
- (ErrorCommand*) buildPartial;

- (ErrorCommandBuilder*) mergeFrom:(ErrorCommand*) other;
- (ErrorCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ErrorCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (SInt32) code;
- (ErrorCommandBuilder*) setCode:(SInt32) value;
- (ErrorCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (ErrorCommandBuilder*) setReason:(NSString*) value;
- (ErrorCommandBuilder*) clearReason;

- (BOOL) hasAppCode;
- (SInt32) appCode;
- (ErrorCommandBuilder*) setAppCode:(SInt32) value;
- (ErrorCommandBuilder*) clearAppCode;
@end

#define DirectCommand_msg @"msg"
#define DirectCommand_uid @"uid"
#define DirectCommand_fromPeerId @"fromPeerId"
#define DirectCommand_timestamp @"timestamp"
#define DirectCommand_offline @"offline"
#define DirectCommand_hasMore @"hasMore"
#define DirectCommand_toPeerIds @"toPeerIds"
#define DirectCommand_r @"r"
#define DirectCommand_cid @"cid"
#define DirectCommand_id @"id"
#define DirectCommand_transient @"transient"
#define DirectCommand_dt @"dt"
@interface DirectCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOffline_:1;
  BOOL hasHasMore_:1;
  BOOL hasR_:1;
  BOOL hasTransient_:1;
  BOOL hasTimestamp_:1;
  BOOL hasMsg_:1;
  BOOL hasUid_:1;
  BOOL hasFromPeerId_:1;
  BOOL hasCid_:1;
  BOOL hasId_:1;
  BOOL hasDt_:1;
  BOOL offline_:1;
  BOOL hasMore_:1;
  BOOL r_:1;
  BOOL transient_:1;
  SInt64 timestamp;
  NSString* msg;
  NSString* uid;
  NSString* fromPeerId;
  NSString* cid;
  NSString* id;
  NSString* dt;
  NSMutableArray * toPeerIdsArray;
}
- (BOOL) hasMsg;
- (BOOL) hasUid;
- (BOOL) hasFromPeerId;
- (BOOL) hasTimestamp;
- (BOOL) hasOffline;
- (BOOL) hasHasMore;
- (BOOL) hasR;
- (BOOL) hasCid;
- (BOOL) hasId;
- (BOOL) hasTransient;
- (BOOL) hasDt;
@property (readonly, strong) NSString* msg;
@property (readonly, strong) NSString* uid;
@property (readonly, strong) NSString* fromPeerId;
@property (readonly) SInt64 timestamp;
- (BOOL) offline;
- (BOOL) hasMore;
@property (readonly, strong) NSArray * toPeerIds;
- (BOOL) r;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSString* id;
- (BOOL) transient;
@property (readonly, strong) NSString* dt;
- (NSString*)toPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DirectCommandBuilder*) builder;
+ (DirectCommandBuilder*) builder;
+ (DirectCommandBuilder*) builderWithPrototype:(DirectCommand*) prototype;
- (DirectCommandBuilder*) toBuilder;

+ (DirectCommand*) parseFromData:(NSData*) data;
+ (DirectCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DirectCommand*) parseFromInputStream:(NSInputStream*) input;
+ (DirectCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DirectCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DirectCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DirectCommandBuilder : PBGeneratedMessageBuilder {
@private
  DirectCommand* resultDirectCommand;
}

- (DirectCommand*) defaultInstance;

- (DirectCommandBuilder*) clear;
- (DirectCommandBuilder*) clone;

- (DirectCommand*) build;
- (DirectCommand*) buildPartial;

- (DirectCommandBuilder*) mergeFrom:(DirectCommand*) other;
- (DirectCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DirectCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsg;
- (NSString*) msg;
- (DirectCommandBuilder*) setMsg:(NSString*) value;
- (DirectCommandBuilder*) clearMsg;

- (BOOL) hasUid;
- (NSString*) uid;
- (DirectCommandBuilder*) setUid:(NSString*) value;
- (DirectCommandBuilder*) clearUid;

- (BOOL) hasFromPeerId;
- (NSString*) fromPeerId;
- (DirectCommandBuilder*) setFromPeerId:(NSString*) value;
- (DirectCommandBuilder*) clearFromPeerId;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (DirectCommandBuilder*) setTimestamp:(SInt64) value;
- (DirectCommandBuilder*) clearTimestamp;

- (BOOL) hasOffline;
- (BOOL) offline;
- (DirectCommandBuilder*) setOffline:(BOOL) value;
- (DirectCommandBuilder*) clearOffline;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (DirectCommandBuilder*) setHasMore:(BOOL) value;
- (DirectCommandBuilder*) clearHasMore;

- (NSMutableArray *)toPeerIds;
- (NSString*)toPeerIdsAtIndex:(NSUInteger)index;
- (DirectCommandBuilder *)addToPeerIds:(NSString*)value;
- (DirectCommandBuilder *)setToPeerIdsArray:(NSArray *)array;
- (DirectCommandBuilder *)clearToPeerIds;

- (BOOL) hasR;
- (BOOL) r;
- (DirectCommandBuilder*) setR:(BOOL) value;
- (DirectCommandBuilder*) clearR;

- (BOOL) hasCid;
- (NSString*) cid;
- (DirectCommandBuilder*) setCid:(NSString*) value;
- (DirectCommandBuilder*) clearCid;

- (BOOL) hasId;
- (NSString*) id;
- (DirectCommandBuilder*) setId:(NSString*) value;
- (DirectCommandBuilder*) clearId;

- (BOOL) hasTransient;
- (BOOL) transient;
- (DirectCommandBuilder*) setTransient:(BOOL) value;
- (DirectCommandBuilder*) clearTransient;

- (BOOL) hasDt;
- (NSString*) dt;
- (DirectCommandBuilder*) setDt:(NSString*) value;
- (DirectCommandBuilder*) clearDt;
@end

#define AckCommand_code @"code"
#define AckCommand_reason @"reason"
#define AckCommand_mid @"mid"
#define AckCommand_cid @"cid"
#define AckCommand_timestamp @"timestamp"
#define AckCommand_uid @"uid"
#define AckCommand_fromts @"fromts"
#define AckCommand_tots @"tots"
#define AckCommand_type @"type"
#define AckCommand_ids @"ids"
@interface AckCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasFromts_:1;
  BOOL hasTots_:1;
  BOOL hasCode_:1;
  BOOL hasReason_:1;
  BOOL hasMid_:1;
  BOOL hasCid_:1;
  BOOL hasUid_:1;
  BOOL hasType_:1;
  SInt64 timestamp;
  SInt64 fromts;
  SInt64 tots;
  SInt32 code;
  NSString* reason;
  NSString* mid;
  NSString* cid;
  NSString* uid;
  NSString* type;
  NSMutableArray * idsArray;
}
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasMid;
- (BOOL) hasCid;
- (BOOL) hasTimestamp;
- (BOOL) hasUid;
- (BOOL) hasFromts;
- (BOOL) hasTots;
- (BOOL) hasType;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
@property (readonly, strong) NSString* mid;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt64 timestamp;
@property (readonly, strong) NSString* uid;
@property (readonly) SInt64 fromts;
@property (readonly) SInt64 tots;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSArray * ids;
- (NSString*)idsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AckCommandBuilder*) builder;
+ (AckCommandBuilder*) builder;
+ (AckCommandBuilder*) builderWithPrototype:(AckCommand*) prototype;
- (AckCommandBuilder*) toBuilder;

+ (AckCommand*) parseFromData:(NSData*) data;
+ (AckCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AckCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AckCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AckCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AckCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AckCommandBuilder : PBGeneratedMessageBuilder {
@private
  AckCommand* resultAckCommand;
}

- (AckCommand*) defaultInstance;

- (AckCommandBuilder*) clear;
- (AckCommandBuilder*) clone;

- (AckCommand*) build;
- (AckCommand*) buildPartial;

- (AckCommandBuilder*) mergeFrom:(AckCommand*) other;
- (AckCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AckCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (SInt32) code;
- (AckCommandBuilder*) setCode:(SInt32) value;
- (AckCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (AckCommandBuilder*) setReason:(NSString*) value;
- (AckCommandBuilder*) clearReason;

- (BOOL) hasMid;
- (NSString*) mid;
- (AckCommandBuilder*) setMid:(NSString*) value;
- (AckCommandBuilder*) clearMid;

- (BOOL) hasCid;
- (NSString*) cid;
- (AckCommandBuilder*) setCid:(NSString*) value;
- (AckCommandBuilder*) clearCid;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AckCommandBuilder*) setTimestamp:(SInt64) value;
- (AckCommandBuilder*) clearTimestamp;

- (BOOL) hasUid;
- (NSString*) uid;
- (AckCommandBuilder*) setUid:(NSString*) value;
- (AckCommandBuilder*) clearUid;

- (BOOL) hasFromts;
- (SInt64) fromts;
- (AckCommandBuilder*) setFromts:(SInt64) value;
- (AckCommandBuilder*) clearFromts;

- (BOOL) hasTots;
- (SInt64) tots;
- (AckCommandBuilder*) setTots:(SInt64) value;
- (AckCommandBuilder*) clearTots;

- (BOOL) hasType;
- (NSString*) type;
- (AckCommandBuilder*) setType:(NSString*) value;
- (AckCommandBuilder*) clearType;

- (NSMutableArray *)ids;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (AckCommandBuilder *)addIds:(NSString*)value;
- (AckCommandBuilder *)setIdsArray:(NSArray *)array;
- (AckCommandBuilder *)clearIds;
@end

#define UnreadCommand_convs @"convs"
@interface UnreadCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * convsArray;
}
@property (readonly, strong) NSArray * convs;
- (UnreadTuple*)convsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnreadCommandBuilder*) builder;
+ (UnreadCommandBuilder*) builder;
+ (UnreadCommandBuilder*) builderWithPrototype:(UnreadCommand*) prototype;
- (UnreadCommandBuilder*) toBuilder;

+ (UnreadCommand*) parseFromData:(NSData*) data;
+ (UnreadCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadCommand*) parseFromInputStream:(NSInputStream*) input;
+ (UnreadCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnreadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnreadCommandBuilder : PBGeneratedMessageBuilder {
@private
  UnreadCommand* resultUnreadCommand;
}

- (UnreadCommand*) defaultInstance;

- (UnreadCommandBuilder*) clear;
- (UnreadCommandBuilder*) clone;

- (UnreadCommand*) build;
- (UnreadCommand*) buildPartial;

- (UnreadCommandBuilder*) mergeFrom:(UnreadCommand*) other;
- (UnreadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnreadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)convs;
- (UnreadTuple*)convsAtIndex:(NSUInteger)index;
- (UnreadCommandBuilder *)addConvs:(UnreadTuple*)value;
- (UnreadCommandBuilder *)setConvsArray:(NSArray *)array;
- (UnreadCommandBuilder *)clearConvs;
@end

#define ConvCommand_m @"m"
#define ConvCommand_transient @"transient"
#define ConvCommand_unique @"unique"
#define ConvCommand_cid @"cid"
#define ConvCommand_cdate @"cdate"
#define ConvCommand_createdBy @"createdBy"
#define ConvCommand_sort @"sort"
#define ConvCommand_limit @"limit"
#define ConvCommand_skip @"skip"
#define ConvCommand_flag @"flag"
#define ConvCommand_count @"count"
#define ConvCommand_udate @"udate"
#define ConvCommand_t @"t"
#define ConvCommand_n @"n"
#define ConvCommand_s @"s"
#define ConvCommand_results @"results"
#define ConvCommand_where @"where"
#define ConvCommand_attr @"attr"
@interface ConvCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTransient_:1;
  BOOL hasUnique_:1;
  BOOL hasT_:1;
  BOOL hasLimit_:1;
  BOOL hasSkip_:1;
  BOOL hasFlag_:1;
  BOOL hasCount_:1;
  BOOL hasCid_:1;
  BOOL hasCdate_:1;
  BOOL hasCreatedBy_:1;
  BOOL hasSort_:1;
  BOOL hasUdate_:1;
  BOOL hasN_:1;
  BOOL hasS_:1;
  BOOL hasResults_:1;
  BOOL hasWhere_:1;
  BOOL hasAttr_:1;
  BOOL transient_:1;
  BOOL unique_:1;
  SInt64 t;
  SInt32 limit;
  SInt32 skip;
  SInt32 flag;
  SInt32 count;
  NSString* cid;
  NSString* cdate;
  NSString* createdBy;
  NSString* sort;
  NSString* udate;
  NSString* n;
  NSString* s;
  JsonObjectMessage* results;
  JsonObjectMessage* where;
  JsonObjectMessage* attr;
  NSMutableArray * mArray;
}
- (BOOL) hasTransient;
- (BOOL) hasUnique;
- (BOOL) hasCid;
- (BOOL) hasCdate;
- (BOOL) hasCreatedBy;
- (BOOL) hasSort;
- (BOOL) hasLimit;
- (BOOL) hasSkip;
- (BOOL) hasFlag;
- (BOOL) hasCount;
- (BOOL) hasUdate;
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasS;
- (BOOL) hasResults;
- (BOOL) hasWhere;
- (BOOL) hasAttr;
@property (readonly, strong) NSArray * m;
- (BOOL) transient;
- (BOOL) unique;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSString* cdate;
@property (readonly, strong) NSString* createdBy;
@property (readonly, strong) NSString* sort;
@property (readonly) SInt32 limit;
@property (readonly) SInt32 skip;
@property (readonly) SInt32 flag;
@property (readonly) SInt32 count;
@property (readonly, strong) NSString* udate;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
@property (readonly, strong) NSString* s;
@property (readonly, strong) JsonObjectMessage* results;
@property (readonly, strong) JsonObjectMessage* where;
@property (readonly, strong) JsonObjectMessage* attr;
- (NSString*)mAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ConvCommandBuilder*) builder;
+ (ConvCommandBuilder*) builder;
+ (ConvCommandBuilder*) builderWithPrototype:(ConvCommand*) prototype;
- (ConvCommandBuilder*) toBuilder;

+ (ConvCommand*) parseFromData:(NSData*) data;
+ (ConvCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConvCommand*) parseFromInputStream:(NSInputStream*) input;
+ (ConvCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConvCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ConvCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ConvCommandBuilder : PBGeneratedMessageBuilder {
@private
  ConvCommand* resultConvCommand;
}

- (ConvCommand*) defaultInstance;

- (ConvCommandBuilder*) clear;
- (ConvCommandBuilder*) clone;

- (ConvCommand*) build;
- (ConvCommand*) buildPartial;

- (ConvCommandBuilder*) mergeFrom:(ConvCommand*) other;
- (ConvCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ConvCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)m;
- (NSString*)mAtIndex:(NSUInteger)index;
- (ConvCommandBuilder *)addM:(NSString*)value;
- (ConvCommandBuilder *)setMArray:(NSArray *)array;
- (ConvCommandBuilder *)clearM;

- (BOOL) hasTransient;
- (BOOL) transient;
- (ConvCommandBuilder*) setTransient:(BOOL) value;
- (ConvCommandBuilder*) clearTransient;

- (BOOL) hasUnique;
- (BOOL) unique;
- (ConvCommandBuilder*) setUnique:(BOOL) value;
- (ConvCommandBuilder*) clearUnique;

- (BOOL) hasCid;
- (NSString*) cid;
- (ConvCommandBuilder*) setCid:(NSString*) value;
- (ConvCommandBuilder*) clearCid;

- (BOOL) hasCdate;
- (NSString*) cdate;
- (ConvCommandBuilder*) setCdate:(NSString*) value;
- (ConvCommandBuilder*) clearCdate;

- (BOOL) hasCreatedBy;
- (NSString*) createdBy;
- (ConvCommandBuilder*) setCreatedBy:(NSString*) value;
- (ConvCommandBuilder*) clearCreatedBy;

- (BOOL) hasSort;
- (NSString*) sort;
- (ConvCommandBuilder*) setSort:(NSString*) value;
- (ConvCommandBuilder*) clearSort;

- (BOOL) hasLimit;
- (SInt32) limit;
- (ConvCommandBuilder*) setLimit:(SInt32) value;
- (ConvCommandBuilder*) clearLimit;

- (BOOL) hasSkip;
- (SInt32) skip;
- (ConvCommandBuilder*) setSkip:(SInt32) value;
- (ConvCommandBuilder*) clearSkip;

- (BOOL) hasFlag;
- (SInt32) flag;
- (ConvCommandBuilder*) setFlag:(SInt32) value;
- (ConvCommandBuilder*) clearFlag;

- (BOOL) hasCount;
- (SInt32) count;
- (ConvCommandBuilder*) setCount:(SInt32) value;
- (ConvCommandBuilder*) clearCount;

- (BOOL) hasUdate;
- (NSString*) udate;
- (ConvCommandBuilder*) setUdate:(NSString*) value;
- (ConvCommandBuilder*) clearUdate;

- (BOOL) hasT;
- (SInt64) t;
- (ConvCommandBuilder*) setT:(SInt64) value;
- (ConvCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (ConvCommandBuilder*) setN:(NSString*) value;
- (ConvCommandBuilder*) clearN;

- (BOOL) hasS;
- (NSString*) s;
- (ConvCommandBuilder*) setS:(NSString*) value;
- (ConvCommandBuilder*) clearS;

- (BOOL) hasResults;
- (JsonObjectMessage*) results;
- (ConvCommandBuilder*) setResults:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) setResultsBuilder:(JsonObjectMessageBuilder*) builderForValue;
- (ConvCommandBuilder*) mergeResults:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) clearResults;

- (BOOL) hasWhere;
- (JsonObjectMessage*) where;
- (ConvCommandBuilder*) setWhere:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) setWhereBuilder:(JsonObjectMessageBuilder*) builderForValue;
- (ConvCommandBuilder*) mergeWhere:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) clearWhere;

- (BOOL) hasAttr;
- (JsonObjectMessage*) attr;
- (ConvCommandBuilder*) setAttr:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) setAttrBuilder:(JsonObjectMessageBuilder*) builderForValue;
- (ConvCommandBuilder*) mergeAttr:(JsonObjectMessage*) value;
- (ConvCommandBuilder*) clearAttr;
@end

#define RoomCommand_roomId @"roomId"
#define RoomCommand_s @"s"
#define RoomCommand_t @"t"
#define RoomCommand_n @"n"
#define RoomCommand_transient @"transient"
#define RoomCommand_roomPeerIds @"roomPeerIds"
@interface RoomCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTransient_:1;
  BOOL hasT_:1;
  BOOL hasRoomId_:1;
  BOOL hasS_:1;
  BOOL hasN_:1;
  BOOL transient_:1;
  SInt64 t;
  NSString* roomId;
  NSString* s;
  NSString* n;
  NSMutableArray * roomPeerIdsArray;
}
- (BOOL) hasRoomId;
- (BOOL) hasS;
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasTransient;
@property (readonly, strong) NSString* roomId;
@property (readonly, strong) NSString* s;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
- (BOOL) transient;
@property (readonly, strong) NSArray * roomPeerIds;
- (NSString*)roomPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RoomCommandBuilder*) builder;
+ (RoomCommandBuilder*) builder;
+ (RoomCommandBuilder*) builderWithPrototype:(RoomCommand*) prototype;
- (RoomCommandBuilder*) toBuilder;

+ (RoomCommand*) parseFromData:(NSData*) data;
+ (RoomCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomCommand*) parseFromInputStream:(NSInputStream*) input;
+ (RoomCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RoomCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RoomCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RoomCommandBuilder : PBGeneratedMessageBuilder {
@private
  RoomCommand* resultRoomCommand;
}

- (RoomCommand*) defaultInstance;

- (RoomCommandBuilder*) clear;
- (RoomCommandBuilder*) clone;

- (RoomCommand*) build;
- (RoomCommand*) buildPartial;

- (RoomCommandBuilder*) mergeFrom:(RoomCommand*) other;
- (RoomCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RoomCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRoomId;
- (NSString*) roomId;
- (RoomCommandBuilder*) setRoomId:(NSString*) value;
- (RoomCommandBuilder*) clearRoomId;

- (BOOL) hasS;
- (NSString*) s;
- (RoomCommandBuilder*) setS:(NSString*) value;
- (RoomCommandBuilder*) clearS;

- (BOOL) hasT;
- (SInt64) t;
- (RoomCommandBuilder*) setT:(SInt64) value;
- (RoomCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (RoomCommandBuilder*) setN:(NSString*) value;
- (RoomCommandBuilder*) clearN;

- (BOOL) hasTransient;
- (BOOL) transient;
- (RoomCommandBuilder*) setTransient:(BOOL) value;
- (RoomCommandBuilder*) clearTransient;

- (NSMutableArray *)roomPeerIds;
- (NSString*)roomPeerIdsAtIndex:(NSUInteger)index;
- (RoomCommandBuilder *)addRoomPeerIds:(NSString*)value;
- (RoomCommandBuilder *)setRoomPeerIdsArray:(NSArray *)array;
- (RoomCommandBuilder *)clearRoomPeerIds;
@end

#define LogsCommand_cid @"cid"
#define LogsCommand_l @"l"
#define LogsCommand_limit @"limit"
#define LogsCommand_t @"t"
#define LogsCommand_tt @"tt"
#define LogsCommand_tmid @"tmid"
#define LogsCommand_mid @"mid"
#define LogsCommand_logs @"logs"
@interface LogsCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasT_:1;
  BOOL hasTt_:1;
  BOOL hasL_:1;
  BOOL hasLimit_:1;
  BOOL hasCid_:1;
  BOOL hasTmid_:1;
  BOOL hasMid_:1;
  SInt64 t;
  SInt64 tt;
  SInt32 l;
  SInt32 limit;
  NSString* cid;
  NSString* tmid;
  NSString* mid;
  NSMutableArray * logsArray;
}
- (BOOL) hasCid;
- (BOOL) hasL;
- (BOOL) hasLimit;
- (BOOL) hasT;
- (BOOL) hasTt;
- (BOOL) hasTmid;
- (BOOL) hasMid;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt32 l;
@property (readonly) SInt32 limit;
@property (readonly) SInt64 t;
@property (readonly) SInt64 tt;
@property (readonly, strong) NSString* tmid;
@property (readonly, strong) NSString* mid;
@property (readonly, strong) NSArray * logs;
- (LogItem*)logsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LogsCommandBuilder*) builder;
+ (LogsCommandBuilder*) builder;
+ (LogsCommandBuilder*) builderWithPrototype:(LogsCommand*) prototype;
- (LogsCommandBuilder*) toBuilder;

+ (LogsCommand*) parseFromData:(NSData*) data;
+ (LogsCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LogsCommand*) parseFromInputStream:(NSInputStream*) input;
+ (LogsCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LogsCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LogsCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LogsCommandBuilder : PBGeneratedMessageBuilder {
@private
  LogsCommand* resultLogsCommand;
}

- (LogsCommand*) defaultInstance;

- (LogsCommandBuilder*) clear;
- (LogsCommandBuilder*) clone;

- (LogsCommand*) build;
- (LogsCommand*) buildPartial;

- (LogsCommandBuilder*) mergeFrom:(LogsCommand*) other;
- (LogsCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LogsCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (LogsCommandBuilder*) setCid:(NSString*) value;
- (LogsCommandBuilder*) clearCid;

- (BOOL) hasL;
- (SInt32) l;
- (LogsCommandBuilder*) setL:(SInt32) value;
- (LogsCommandBuilder*) clearL;

- (BOOL) hasLimit;
- (SInt32) limit;
- (LogsCommandBuilder*) setLimit:(SInt32) value;
- (LogsCommandBuilder*) clearLimit;

- (BOOL) hasT;
- (SInt64) t;
- (LogsCommandBuilder*) setT:(SInt64) value;
- (LogsCommandBuilder*) clearT;

- (BOOL) hasTt;
- (SInt64) tt;
- (LogsCommandBuilder*) setTt:(SInt64) value;
- (LogsCommandBuilder*) clearTt;

- (BOOL) hasTmid;
- (NSString*) tmid;
- (LogsCommandBuilder*) setTmid:(NSString*) value;
- (LogsCommandBuilder*) clearTmid;

- (BOOL) hasMid;
- (NSString*) mid;
- (LogsCommandBuilder*) setMid:(NSString*) value;
- (LogsCommandBuilder*) clearMid;

- (NSMutableArray *)logs;
- (LogItem*)logsAtIndex:(NSUInteger)index;
- (LogsCommandBuilder *)addLogs:(LogItem*)value;
- (LogsCommandBuilder *)setLogsArray:(NSArray *)array;
- (LogsCommandBuilder *)clearLogs;
@end

#define RcpCommand_id @"id"
#define RcpCommand_cid @"cid"
#define RcpCommand_t @"t"
@interface RcpCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasT_:1;
  BOOL hasId_:1;
  BOOL hasCid_:1;
  SInt64 t;
  NSString* id;
  NSString* cid;
}
- (BOOL) hasId;
- (BOOL) hasCid;
- (BOOL) hasT;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt64 t;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RcpCommandBuilder*) builder;
+ (RcpCommandBuilder*) builder;
+ (RcpCommandBuilder*) builderWithPrototype:(RcpCommand*) prototype;
- (RcpCommandBuilder*) toBuilder;

+ (RcpCommand*) parseFromData:(NSData*) data;
+ (RcpCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RcpCommand*) parseFromInputStream:(NSInputStream*) input;
+ (RcpCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RcpCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RcpCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RcpCommandBuilder : PBGeneratedMessageBuilder {
@private
  RcpCommand* resultRcpCommand;
}

- (RcpCommand*) defaultInstance;

- (RcpCommandBuilder*) clear;
- (RcpCommandBuilder*) clone;

- (RcpCommand*) build;
- (RcpCommand*) buildPartial;

- (RcpCommandBuilder*) mergeFrom:(RcpCommand*) other;
- (RcpCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RcpCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (RcpCommandBuilder*) setId:(NSString*) value;
- (RcpCommandBuilder*) clearId;

- (BOOL) hasCid;
- (NSString*) cid;
- (RcpCommandBuilder*) setCid:(NSString*) value;
- (RcpCommandBuilder*) clearCid;

- (BOOL) hasT;
- (SInt64) t;
- (RcpCommandBuilder*) setT:(SInt64) value;
- (RcpCommandBuilder*) clearT;
@end

#define ReadCommand_cid @"cid"
@interface ReadCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCid_:1;
  NSString* cid;
}
- (BOOL) hasCid;
@property (readonly, strong) NSString* cid;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ReadCommandBuilder*) builder;
+ (ReadCommandBuilder*) builder;
+ (ReadCommandBuilder*) builderWithPrototype:(ReadCommand*) prototype;
- (ReadCommandBuilder*) toBuilder;

+ (ReadCommand*) parseFromData:(NSData*) data;
+ (ReadCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ReadCommand*) parseFromInputStream:(NSInputStream*) input;
+ (ReadCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ReadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ReadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ReadCommandBuilder : PBGeneratedMessageBuilder {
@private
  ReadCommand* resultReadCommand;
}

- (ReadCommand*) defaultInstance;

- (ReadCommandBuilder*) clear;
- (ReadCommandBuilder*) clone;

- (ReadCommand*) build;
- (ReadCommand*) buildPartial;

- (ReadCommandBuilder*) mergeFrom:(ReadCommand*) other;
- (ReadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ReadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (ReadCommandBuilder*) setCid:(NSString*) value;
- (ReadCommandBuilder*) clearCid;
@end

#define GenericCommand_cmd @"cmd"
#define GenericCommand_op @"op"
#define GenericCommand_appId @"appId"
#define GenericCommand_peerId @"peerId"
#define GenericCommand_i @"i"
#define GenericCommand_installationId @"installationId"
#define GenericCommand_loginMessage @"loginMessage"
#define GenericCommand_dataMessage @"dataMessage"
#define GenericCommand_sessionMessage @"sessionMessage"
#define GenericCommand_errorMessage @"errorMessage"
#define GenericCommand_directMessage @"directMessage"
#define GenericCommand_ackMessage @"ackMessage"
#define GenericCommand_unreadMessage @"unreadMessage"
#define GenericCommand_readMessage @"readMessage"
#define GenericCommand_rcpMessage @"rcpMessage"
#define GenericCommand_logsMessage @"logsMessage"
#define GenericCommand_convMessage @"convMessage"
#define GenericCommand_roomMessage @"roomMessage"
@interface GenericCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasI_:1;
  BOOL hasAppId_:1;
  BOOL hasPeerId_:1;
  BOOL hasInstallationId_:1;
  BOOL hasLoginMessage_:1;
  BOOL hasDataMessage_:1;
  BOOL hasSessionMessage_:1;
  BOOL hasErrorMessage_:1;
  BOOL hasDirectMessage_:1;
  BOOL hasAckMessage_:1;
  BOOL hasUnreadMessage_:1;
  BOOL hasReadMessage_:1;
  BOOL hasRcpMessage_:1;
  BOOL hasLogsMessage_:1;
  BOOL hasConvMessage_:1;
  BOOL hasRoomMessage_:1;
  BOOL hasCmd_:1;
  BOOL hasOp_:1;
  SInt32 i;
  NSString* appId;
  NSString* peerId;
  NSString* installationId;
  LoginCommand* loginMessage;
  DataCommand* dataMessage;
  SessionCommand* sessionMessage;
  ErrorCommand* errorMessage;
  DirectCommand* directMessage;
  AckCommand* ackMessage;
  UnreadCommand* unreadMessage;
  ReadCommand* readMessage;
  RcpCommand* rcpMessage;
  LogsCommand* logsMessage;
  ConvCommand* convMessage;
  RoomCommand* roomMessage;
  CommandType cmd;
  OpType op;
}
- (BOOL) hasCmd;
- (BOOL) hasOp;
- (BOOL) hasAppId;
- (BOOL) hasPeerId;
- (BOOL) hasI;
- (BOOL) hasInstallationId;
- (BOOL) hasLoginMessage;
- (BOOL) hasDataMessage;
- (BOOL) hasSessionMessage;
- (BOOL) hasErrorMessage;
- (BOOL) hasDirectMessage;
- (BOOL) hasAckMessage;
- (BOOL) hasUnreadMessage;
- (BOOL) hasReadMessage;
- (BOOL) hasRcpMessage;
- (BOOL) hasLogsMessage;
- (BOOL) hasConvMessage;
- (BOOL) hasRoomMessage;
@property (readonly) CommandType cmd;
@property (readonly) OpType op;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) NSString* peerId;
@property (readonly) SInt32 i;
@property (readonly, strong) NSString* installationId;
@property (readonly, strong) LoginCommand* loginMessage;
@property (readonly, strong) DataCommand* dataMessage;
@property (readonly, strong) SessionCommand* sessionMessage;
@property (readonly, strong) ErrorCommand* errorMessage;
@property (readonly, strong) DirectCommand* directMessage;
@property (readonly, strong) AckCommand* ackMessage;
@property (readonly, strong) UnreadCommand* unreadMessage;
@property (readonly, strong) ReadCommand* readMessage;
@property (readonly, strong) RcpCommand* rcpMessage;
@property (readonly, strong) LogsCommand* logsMessage;
@property (readonly, strong) ConvCommand* convMessage;
@property (readonly, strong) RoomCommand* roomMessage;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GenericCommandBuilder*) builder;
+ (GenericCommandBuilder*) builder;
+ (GenericCommandBuilder*) builderWithPrototype:(GenericCommand*) prototype;
- (GenericCommandBuilder*) toBuilder;

+ (GenericCommand*) parseFromData:(NSData*) data;
+ (GenericCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GenericCommand*) parseFromInputStream:(NSInputStream*) input;
+ (GenericCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GenericCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GenericCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GenericCommandBuilder : PBGeneratedMessageBuilder {
@private
  GenericCommand* resultGenericCommand;
}

- (GenericCommand*) defaultInstance;

- (GenericCommandBuilder*) clear;
- (GenericCommandBuilder*) clone;

- (GenericCommand*) build;
- (GenericCommand*) buildPartial;

- (GenericCommandBuilder*) mergeFrom:(GenericCommand*) other;
- (GenericCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GenericCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCmd;
- (CommandType) cmd;
- (GenericCommandBuilder*) setCmd:(CommandType) value;
- (GenericCommandBuilder*) clearCmd;

- (BOOL) hasOp;
- (OpType) op;
- (GenericCommandBuilder*) setOp:(OpType) value;
- (GenericCommandBuilder*) clearOp;

- (BOOL) hasAppId;
- (NSString*) appId;
- (GenericCommandBuilder*) setAppId:(NSString*) value;
- (GenericCommandBuilder*) clearAppId;

- (BOOL) hasPeerId;
- (NSString*) peerId;
- (GenericCommandBuilder*) setPeerId:(NSString*) value;
- (GenericCommandBuilder*) clearPeerId;

- (BOOL) hasI;
- (SInt32) i;
- (GenericCommandBuilder*) setI:(SInt32) value;
- (GenericCommandBuilder*) clearI;

- (BOOL) hasInstallationId;
- (NSString*) installationId;
- (GenericCommandBuilder*) setInstallationId:(NSString*) value;
- (GenericCommandBuilder*) clearInstallationId;

- (BOOL) hasLoginMessage;
- (LoginCommand*) loginMessage;
- (GenericCommandBuilder*) setLoginMessage:(LoginCommand*) value;
- (GenericCommandBuilder*) setLoginMessageBuilder:(LoginCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeLoginMessage:(LoginCommand*) value;
- (GenericCommandBuilder*) clearLoginMessage;

- (BOOL) hasDataMessage;
- (DataCommand*) dataMessage;
- (GenericCommandBuilder*) setDataMessage:(DataCommand*) value;
- (GenericCommandBuilder*) setDataMessageBuilder:(DataCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeDataMessage:(DataCommand*) value;
- (GenericCommandBuilder*) clearDataMessage;

- (BOOL) hasSessionMessage;
- (SessionCommand*) sessionMessage;
- (GenericCommandBuilder*) setSessionMessage:(SessionCommand*) value;
- (GenericCommandBuilder*) setSessionMessageBuilder:(SessionCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeSessionMessage:(SessionCommand*) value;
- (GenericCommandBuilder*) clearSessionMessage;

- (BOOL) hasErrorMessage;
- (ErrorCommand*) errorMessage;
- (GenericCommandBuilder*) setErrorMessage:(ErrorCommand*) value;
- (GenericCommandBuilder*) setErrorMessageBuilder:(ErrorCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeErrorMessage:(ErrorCommand*) value;
- (GenericCommandBuilder*) clearErrorMessage;

- (BOOL) hasDirectMessage;
- (DirectCommand*) directMessage;
- (GenericCommandBuilder*) setDirectMessage:(DirectCommand*) value;
- (GenericCommandBuilder*) setDirectMessageBuilder:(DirectCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeDirectMessage:(DirectCommand*) value;
- (GenericCommandBuilder*) clearDirectMessage;

- (BOOL) hasAckMessage;
- (AckCommand*) ackMessage;
- (GenericCommandBuilder*) setAckMessage:(AckCommand*) value;
- (GenericCommandBuilder*) setAckMessageBuilder:(AckCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeAckMessage:(AckCommand*) value;
- (GenericCommandBuilder*) clearAckMessage;

- (BOOL) hasUnreadMessage;
- (UnreadCommand*) unreadMessage;
- (GenericCommandBuilder*) setUnreadMessage:(UnreadCommand*) value;
- (GenericCommandBuilder*) setUnreadMessageBuilder:(UnreadCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeUnreadMessage:(UnreadCommand*) value;
- (GenericCommandBuilder*) clearUnreadMessage;

- (BOOL) hasReadMessage;
- (ReadCommand*) readMessage;
- (GenericCommandBuilder*) setReadMessage:(ReadCommand*) value;
- (GenericCommandBuilder*) setReadMessageBuilder:(ReadCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeReadMessage:(ReadCommand*) value;
- (GenericCommandBuilder*) clearReadMessage;

- (BOOL) hasRcpMessage;
- (RcpCommand*) rcpMessage;
- (GenericCommandBuilder*) setRcpMessage:(RcpCommand*) value;
- (GenericCommandBuilder*) setRcpMessageBuilder:(RcpCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeRcpMessage:(RcpCommand*) value;
- (GenericCommandBuilder*) clearRcpMessage;

- (BOOL) hasLogsMessage;
- (LogsCommand*) logsMessage;
- (GenericCommandBuilder*) setLogsMessage:(LogsCommand*) value;
- (GenericCommandBuilder*) setLogsMessageBuilder:(LogsCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeLogsMessage:(LogsCommand*) value;
- (GenericCommandBuilder*) clearLogsMessage;

- (BOOL) hasConvMessage;
- (ConvCommand*) convMessage;
- (GenericCommandBuilder*) setConvMessage:(ConvCommand*) value;
- (GenericCommandBuilder*) setConvMessageBuilder:(ConvCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeConvMessage:(ConvCommand*) value;
- (GenericCommandBuilder*) clearConvMessage;

- (BOOL) hasRoomMessage;
- (RoomCommand*) roomMessage;
- (GenericCommandBuilder*) setRoomMessage:(RoomCommand*) value;
- (GenericCommandBuilder*) setRoomMessageBuilder:(RoomCommandBuilder*) builderForValue;
- (GenericCommandBuilder*) mergeRoomMessage:(RoomCommand*) value;
- (GenericCommandBuilder*) clearRoomMessage;
@end


// @@protoc_insertion_point(global_scope)
